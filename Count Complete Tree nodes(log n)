/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int countNodes(TreeNode root) {
       if(root==null) return 0;
        int leftheight=heightLeft(root);
        int rightheight=heightRight(root);
        if(leftheight==rightheight){
         return  (int)Math.pow(2,leftheight)-1;
           
        }
        
   return     1+countNodes(root.left)+countNodes(root.right);
       
    }
    
    int heightLeft(TreeNode root){
        if(root==null) return 0;
        
        return 1+heightLeft(root.left);
    }
  
    
   int heightRight(TreeNode root){
       if(root==null) return 0;
       return 1+heightRight(root.right);
   }
}
